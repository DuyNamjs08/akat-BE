pipeline {
    agent any

    tools {
        nodejs 'Node20'
    }

    environment {
        DEPLOY_DIR = '/root/app/akat-BE'
    }

    stages {
        // Stage 1: Checkout & C√†i ƒë·∫∑t th∆∞ vi·ªán
        stage('Checkout & Pull Code') {
            steps {
                script {
                    // Pull code m·ªõi nh·∫•t t·ª´ Git repository n·∫øu ƒë√£ c√≥ th∆∞ m·ª•c
                    if (fileExists(DEPLOY_DIR)) {
                        dir(DEPLOY_DIR) {
                            sh 'git pull origin master'
                        }
                    } else {
                        // N·∫øu ch∆∞a c√≥ th∆∞ m·ª•c, checkout t·ª´ git
                        checkout scm
                    }
                }
                // C√†i ƒë·∫∑t th∆∞ vi·ªán sau khi pull code
                sh 'npm ci'
            }
        }

        // Stage 2: Ki·ªÉm tra ch·∫•t l∆∞·ª£ng m√£ ngu·ªìn
        stage('Lint & Test') {
            steps {
                sh 'npm run lint'
            }
        }

        // Stage 3: Build
        stage('Build') {
            steps {
                sh 'npm run build' // build ra th∆∞ m·ª•c dist/
                archiveArtifacts artifacts: 'dist/**/*', fingerprint: true
            }
        }

        // Stage 4: Deploy n·ªôi b·ªô (tr√™n VPS)
        stage('Deploy') {
            when { branch 'master' }
            steps {
                sh """
                    set -e
                    echo "üì¶ Deploying to ${DEPLOY_DIR} ..."

                    # 1. T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a c√≥
                    mkdir -p ${DEPLOY_DIR}

                    # 2. ƒê·ªìng b·ªô build output v√† ecosystem config
                    rsync -avz --delete dist/ ${DEPLOY_DIR}/dist/
                    cp ecosystem.config.js ${DEPLOY_DIR}/

                    # 3. Restart ·ª©ng d·ª•ng b·∫±ng PM2
                    pm2 restart ${DEPLOY_DIR}/ecosystem.config.js 

                    echo "‚úÖ Deployed successfully!"
                """
            }
        }
    }
}
